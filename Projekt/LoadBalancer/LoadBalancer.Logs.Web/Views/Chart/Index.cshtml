@model ChartViewModel
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartDataModels.Select(x => x.FromDateTime.ToShortTimeString()).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartDataModels.Select(x => x.RequestCount).ToList());
    ViewData["Title"] = "Chart";
}

<h1>Charts</h1>

<div>

    @Html.ActionLink("Last 1h", "GetLastHours", new { hours = 1 }, new { @class = "btn btn-primary btn-xs" })
    @Html.ActionLink("Last 24h", "GetLastHours", new { hours = 24 }, new { @class = "btn btn-primary btn-xs" })
    @Html.ActionLink("Last 7 days", "GetLastDays", new { days = 7 }, new { @class = "btn btn-primary btn-xs" })
    @Html.ActionLink("Last 30 days", "GetLastDays", new { days = 30 }, new { @class = "btn btn-primary btn-xs" })

    <dl class="row">
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.FromTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FromTime)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.ToTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ToTime)
        </dd>
    </dl>
    <hr />
    <div class="chart-container">
        <canvas id="chart" style="width:100%; height:500px"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">

        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Departments Chart",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'bar'

            });
        });
</script>  